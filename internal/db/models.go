// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0

package db

import (
	"github.com/jackc/pgx/v5/pgtype"
)

type ExampleItem struct {
	ID          int32              `json:"id"`
	Name        string             `json:"name"`
	Description pgtype.Text        `json:"description"`
	CreatedAt   pgtype.Timestamptz `json:"created_at"`
	UpdatedAt   pgtype.Timestamptz `json:"updated_at"`
}

type Headline struct {
	ID              string             `json:"id"`
	Query           pgtype.Text        `json:"query"`
	Category        pgtype.Text        `json:"category"`
	SentimentScore  pgtype.Float4      `json:"sentiment_score"`
	MetaSource      pgtype.Text        `json:"meta_source"`
	MetaTitle       pgtype.Text        `json:"meta_title"`
	MetaAuthor      pgtype.Text        `json:"meta_author"`
	MetaDescription pgtype.Text        `json:"meta_description"`
	MetaPublishedAt pgtype.Timestamptz `json:"meta_published_at"`
	MetaUrl         pgtype.Text        `json:"meta_url"`
	MetaUrlToImage  pgtype.Text        `json:"meta_url_to_image"`
	CreatedAt       pgtype.Timestamptz `json:"created_at"`
	UpdatedAt       pgtype.Timestamptz `json:"updated_at"`
}

type SentimentResult struct {
	ContentID         string             `json:"content_id"`
	HeadlineID        pgtype.Text        `json:"headline_id"`
	HeadlineQuery     pgtype.Text        `json:"headline_query"`
	HeadlineCategory  pgtype.Text        `json:"headline_category"`
	Source            pgtype.Text        `json:"source"`
	RawContentTopic   pgtype.Text        `json:"raw_content_topic"`
	TextAnalyzed      pgtype.Text        `json:"text_analyzed"`
	WasSummarized     pgtype.Bool        `json:"was_summarized"`
	OriginalText      pgtype.Text        `json:"original_text"`
	MetadataTimestamp pgtype.Timestamptz `json:"metadata_timestamp"`
	MetadataAuthor    pgtype.Text        `json:"metadata_author"`
	MetadataSubreddit pgtype.Text        `json:"metadata_subreddit"`
	MetadataPostID    pgtype.Text        `json:"metadata_post_id"`
	MetadataUrl       pgtype.Text        `json:"metadata_url"`
	SentimentScore    pgtype.Float8      `json:"sentiment_score"`
	SentimentLabel    pgtype.Text        `json:"sentiment_label"`
	Confidence        pgtype.Float8      `json:"confidence"`
	CreatedAt         pgtype.Timestamptz `json:"created_at"`
	UpdatedAt         pgtype.Timestamptz `json:"updated_at"`
}
